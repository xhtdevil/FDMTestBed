install.packages('fun')
library(fun)
gomoku()
kmeans
getwd()
updateR()
version
packageStatus()
update.packages()
d
d=3
d
library(kknn)
kknn
kmeans
Mclust
library(Mclust)
library(mclust)
Mclust
library(kknn)
.packages(all.available=T)
.libPaths()
.packages(all.available=T)
library(kknn)
install.packages(kknn)
install.packages("kknn")
install.packages("Matrix")
library(kknn)
update.packages()
library(kknn)
install.packages("kknn")
library(kknn)
library("kknn")
library("arules")
library("kknn")
install.packages("kknn")
library("kknn")
library(kknn)
library("kknn")
R.vesion
R.vesion.string
version
version.string
R.version.string
qt(1-0.05)
qt(1-0.05,9)
qt(0.05,9,lower.tail=False)
qt(0.05,9,lower.tail=FALSE)
dt(0.4,9)
library(Rserve)
install.packages(Rserve)
install.packages(knn)
install.packages("Rserve")
library(Rserve)
Rserve()
Rserve(args='--vanilla')
d=3
d
Rserve(args='--vanilla')
Rserve()
library(Rserve)
Rserve(args='--vanilla')
a
a=4
a
x-c(1,2,3,4,5)
x<-c(1,2,3,4,5)
y<-c(4,6,7,9,11)
lowess(x,y)
women
fit<-lm(weight~height,data=women)
summary(fit)
coefficients(fit)
confint(fit)
residuals(fit)
anova(fit)
plot(fit)
AIC(fit)
predict(fit)
new<-data.frame(height=73)
predict(lm.sol,new,interval="prediction",level=0.95)
predict(fit,new,interval="prediction",level=0.95)
predict(fit,new,interval="confidence",level=0.95)
women$height
women$weight
dim(women)
women
plot(women$height,women$weight.xlab="Height(in inches)",ylab="Weight(in pounds)")
plot(women$height,women$weight,xlab="Height(in inches)",ylab="Weight(in pounds)")
abline(fit)
plot(women$height,women$weight,xlab="Height(in inches)",ylab="Weight(in pounds)")
abline(fit)
x<-c(2,3)
y<-c(10,13)
m<-lm(y~x)
summary(m)
x<-c(2,3,4)
y<-c(10,13,14)
m<-lm(y~x)
summary(m)
x<c(7,8,9)
x
y
x
x-c(7,8,9)
x
x<-c(7,8,9)
x
y<-c(13,14,15.6)
y
m<-lm(y~x)
newx<-data.frame(x=10)
newx
predict(fit,newx,interval="prediction",level=0.95)
predict(m,newx,interval="prediction",level=0.95)
predict(m,newx,interval="prediction",level=0.20)
install.packages("Cairo")
suppressWarnings(require('Cairo',quietly=TRUE))
data(iris)
attach(iris)
plot(Sepal.Length,Petal.Length,col=unclass(Species))
dev.off()
data(iris)
plot(Sepal.Length,Petal.Length,col=unclass(Species))
x<c(1,2,3)
x<-c(1,2,3)
x
y<-c(2,4,6)
plot(x,y)
plot(x,y,xlab=p,ylab=q)
plot(x,y,xlab="p",ylab="q")
demo()
demo(image)
q()
?im
?lm
example(lm)
x<-c(0,1,2)
x
y<-c(0,2,4)
t<-lm(y~x)
t
t<-data.frame(x="3")
t
t<-lm(y~x)
t
n<-data.frame(x="3")
n
predict(t,n,interval="prediction",level=0.95)
n<-data.frame(x=3)
predict(t,n,interval="prediction",level=0.95)
rnorm(10)
rnorm(1)
rnorm(1,sd=0.5)
rnorm(1)
load()
load(.Rdata)
load(".Rdata")
data<-c(14,14,15,15,16,17)
data
plot(data)
pwd
pws
getwd()
x=read.table(file.choose())
x
range(2)
range(2,5)
citation()
help()
r
a
b
c
d
e
r
pow(2,3)
seq(2,10)
m<-cbind(1,1:7)
m
m<-cbind(m,8:14)[,c(1,3,2)]
m
c(1,3,2)
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
A=1
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
g=function(){}
g=function(x){return x}
g<-function(x){return(x);}
g(2)
Reduce(function(y,w) w(y),c(function(x) x+1,function(x) x*x,function(x) g(x)/2),A)
V-c(1,2,3,4,5,0)
V<-c(1,2,3,4,5,0)
V
V[which.min(lapply(V,function(x) x^3))]
V[which.min(sapply(V,function(x) x^3))]
V[which.min(unlist(lapply(V,function(x) x)))]
lapply(c(1,-2,3),abs)
sapply(c(1,-2,3),abs)
a<-c(1 4 6,1 5 2)
a<-c(1 4 61 5 2)
a<-c(1,4,61,5,2)
a<-c(1,4,61,5,2;2,4,6,3,2)
a
a[2]
a[0]
type(a)
rm( list = ls (all = TRUE));#
filename="result9_mu.csv"#
data <- read.csv(filename, header = T, stringsAsFactors = FALSE, sep=",")#
data <- data[,-1]#
rownames(data) <- c("total_time","total_packets","min_delay","max_delay","avg_delay",#
                    "avg_jitter","sd_delay","avg_bit_rate","avg_pkt_rate");#
#
data <- t(data);#
data <- as.data.frame(data);#
data <- data.frame(rownames(data),data);#
colnames(data)[1] <- "hostname";#
#
# BW Calculation#
# install.packages("ggplot2")#
library("ggplot2")#
#data$hostname <- factor(data$hostname)#
r <- ggplot(data=data, aes(x = hostname, y=avg_bit_rate, fill = hostname, group = factor(1)))#
r <- r + geom_bar(stat = "identity")#
r <- r + labs(title = "Throughput", x = "Hosts", y = "Average Bit Rate /Kbps");#
r#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Throughput.png"))#
#
# satisfactory Caluculation#
req = c(5,5,5,5,4,4,3,3,3,3);#
sat = rep(0,10);#
for (i in seq(1, length(data$avg_bit_rate))){#
  sat[i] = data$avg_bit_rate[i] / 1000 / req[i];#
}#
data <- cbind(data,sat);#
#data$hostname <- factor(data$hostname)#
s1 <- ggplot(data=data, aes(x = hostname, y=sat, fill = sat, group = factor(1)))#
s1 <- s1 + geom_bar(stat = "identity")#
s1 <- s1 + scale_fill_gradient(low='red', high='green')#
s1 <- s1 + labs(title = "Satisfaction", x = "Hosts", y = "Satisfaction Value");#
s1#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Satisfaction.png"))#
# plot with standard deviation#
#
value <- function(a,b){#
  sgn <- sign(a - b);#
  rr <- a - b;#
  rr[sgn == -1] <- 0;#
  return(rr);#
}#
s <- ggplot(data=data, aes(x=hostname, y=avg_delay, fill = avg_delay));#
s <- s + geom_bar(position=position_dodge(), stat="identity");#
s <- s + geom_errorbar(aes(ymin=value(avg_delay,sd_delay), ymax= avg_delay + sd_delay),#
                       width=.2,                    # Width of the error bars#
                       position=position_dodge(.9));#
s <- s + scale_fill_gradient(low='green', high='red')#
s <- s + labs(title = "Delay", x = "Hosts", y = "Average Delay/s");#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Delay.png"))#
# analysis#
avg_delay <- mean(data$avg_delay);#
avg_delay#
satisfa <- mean(data$sat);#
satisfa
rm( list = ls (all = TRUE));#
filename="result9_mu.csv"#
data <- read.csv(filename, header = T, stringsAsFactors = FALSE, sep=",")#
data <- data[,-1]#
rownames(data) <- c("total_time","total_packets","min_delay","max_delay","avg_delay",#
                    "avg_jitter","sd_delay","avg_bit_rate","avg_pkt_rate");#
#
data <- t(data);#
data <- as.data.frame(data);#
data <- data.frame(rownames(data),data);#
colnames(data)[1] <- "hostname";#
#
# BW Calculation#
# install.packages("ggplot2")#
library("ggplot2")#
#data$hostname <- factor(data$hostname)#
r <- ggplot(data=data, aes(x = hostname, y=avg_bit_rate, fill = hostname, group = factor(1)))#
r <- r + geom_bar(stat = "identity")#
r <- r + labs(title = "Throughput", x = "Hosts", y = "Average Bit Rate /Kbps");#
r#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Throughput.png"))#
#
# satisfactory Caluculation#
req = c(5,5,5,5,4,4,3,3,3,3);#
sat = rep(0,10);#
for (i in seq(1, length(data$avg_bit_rate))){#
  sat[i] = data$avg_bit_rate[i] / 1000 / req[i];#
}#
data <- cbind(data,sat);#
#data$hostname <- factor(data$hostname)#
s1 <- ggplot(data=data, aes(x = hostname, y=sat, fill = sat, group = factor(1)))#
s1 <- s1 + geom_bar(stat = "identity")#
s1 <- s1 + scale_fill_gradient(low='red', high='green')#
s1 <- s1 + labs(title = "Satisfaction", x = "Hosts", y = "Satisfaction Value");#
s1#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Satisfaction.png"))#
# plot with standard deviation#
#
value <- function(a,b){#
  sgn <- sign(a - b);#
  rr <- a - b;#
  rr[sgn == -1] <- 0;#
  return(rr);#
}#
s <- ggplot(data=data, aes(x=hostname, y=avg_delay, fill = avg_delay));#
s <- s + geom_bar(position=position_dodge(), stat="identity");#
s <- s + geom_errorbar(aes(ymin=value(avg_delay,sd_delay), ymax= avg_delay + sd_delay),#
                       width=.2,                    # Width of the error bars#
                       position=position_dodge(.9));#
s <- s + scale_fill_gradient(low='green', high='red')#
s <- s + labs(title = "Delay", x = "Hosts", y = "Average Delay/s");#
ggsave(paste(unlist(strsplit(filename, '\\.'))[1],"Delay.png"))#
# analysis#
avg_delay <- mean(data$avg_delay);#
avg_delay#
satisfa <- mean(data$sat);#
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9.R")
satisfa
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9.R")
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9.R")
satisfa
satisfa
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9.R")
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9_modi.R")
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9_modi.R")
satisfa
source("/Users/liuxin/Desktop/218/FDMTestBed/Testcase9/analysis_9_modi.R")
satisfa
